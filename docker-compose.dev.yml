version: '3.6'
services:
  frontend:
    ports:
      - "8084:80"
  react-frontend:
    ports:
      - "8090:80"
    environment:
      - API_URL="http://localhost:8080"
  rabbitmq:
    ports:
      - "5672:5672"
      - "15672:15672"
  gateway:
    ports:
      - "8080:80"
  identity:
    depends_on:
      identity-db:
        condition: service_healthy
    ports:
      - "8081:80"
  identity-db:
    image: postgres:11.14
    environment:
      POSTGRES_PASSWORD: $IDENTITY_PASSWORD
      POSTGRES_USER: $IDENTITY_USER
      POSTGRES_DB: $IDENTITY_DATABASE
    ports:
      - "25432:5432"
    networks:
      - identity-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "$IDENTITY_DATABASE"]
      interval: 10s
      timeout: 60s
      retries: 10
      start_period: 100s
  identity-db-updater:
    depends_on:
      identity-db:
        condition: service_healthy
  rentals:
    ports:
      - "8082:8080"
    depends_on:
      rentals-db:
        condition: service_healthy
  rentals-db:
    image: postgres:11.14
    environment:
      POSTGRES_PASSWORD: $RENTALS_PASSWORD
      POSTGRES_USER: $RENTALS_USER
      POSTGRES_DB: $RENTALS_DATABASE
    ports:
      - "25433:5432"
    networks:
      - rentals-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "$RENTALS_DATABASE"]
      interval: 10s
      timeout: 60s
      retries: 10
      start_period: 100s
  books:
    ports:
      - "8083:8080"
    depends_on:
      books-db:
        condition: service_healthy
  books-db:
    image: postgres:11.14
    environment:
      POSTGRES_PASSWORD: $BOOKS_PASSWORD
      POSTGRES_USER: $BOOKS_USER
      POSTGRES_DB: $BOOKS_DATABASE
    ports:
      - "25434:5432"
    networks:
      - books-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "$BOOKS_DATABASE"]
      interval: 10s
      timeout: 60s
      retries: 10
      start_period: 100s
  books-db-updater:
    depends_on:
      books-db:
        condition: service_healthy
  movies:
    ports:
      - "8085:8080"
    depends_on:
      movies-db:
        condition: service_healthy
  movies-db:
    image: postgres:11.14
    environment:
      POSTGRES_PASSWORD: $MOVIES_PASSWORD
      POSTGRES_USER: $MOVIES_USER
      POSTGRES_DB: $MOVIES_DATABASE
    ports:
      - "25434:5432"
    networks:
      - movies-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "$MOVIES_DATABASE"]
      interval: 10s
      timeout: 60s
      retries: 10
      start_period: 100s
  movies-db-updater:
    depends_on:
      movies-db:
        condition: service_healthy        
