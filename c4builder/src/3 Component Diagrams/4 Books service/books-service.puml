@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Component.puml

!define DEVICONS https://raw.githubusercontent.com/tupadr3/plantuml-icon-font-sprites/master/devicons

!include DEVICONS/dotnet.puml
!include DEVICONS/postgresql.puml
!include <logos/rabbitmq.puml>

LAYOUT_WITH_LEGEND()

title Component diagram for eLibraryOnContainers - Books service

Container(gateway, "API Gateway", ".NET with ASP.NET Core", "Routes all requests to appropriate services endpoints", $sprite="dotnet")
ContainerQueue(rabbit, "Event bus", "RabbitMQ", "Event bus for asynchronous communication", $sprite=rabbitmq)
ContainerDb(books_db, "Books database", "PostgreSQL", "Holds books and physical copies information", $sprite="postgresql")
ContainerDb(books_read_db, "Books (READ) database", "PostgreSQL", "Holds aggregated books information", $sprite="postgresql")

Container_Boundary(Books, "Books service") {
  Component(booksController, "Books Controller","Rest Controller","Allows to send books related requests")
  Component(booksWorker, "Books Worker","Events consumer","Consumes books events")
  Component(booksService, "Books Service","Events publisher","Publishes books events")
 
  Component(booksCommands, "Books Commands", "CQRS Command Handler", "Adds, deletes or edits book")
  Component(booksQueries, "Books Queries", "CQRS Command Handler", "Gets book or books information")
  Component(booksCopiesCommands, "Books Copies Commands", "CQRS Command Handler", "Adds, deletes or edits physical copy of a book")

  Component_Ext(mediator, "Mediator", "MediatR library service", "Encapsulates communication between controllers and services")

  Component(booksRepository, "Books Repository", ".NET Repository", "Provides functionalities related to managing books and physical copies of books")
}

Rel(gateway, booksController, "Uses", "JSON/HTTPS")

Rel(booksController, mediator, "Uses")

Rel(mediator, booksQueries, "Uses")
Rel(mediator, booksCommands, "Uses")
Rel(mediator, booksCopiesCommands, "Uses")

Rel(booksQueries, booksRepository,"Uses")
Rel(booksCommands, booksRepository, "Uses")
Rel(booksCopiesCommands, booksRepository, "Uses")
Rel(booksWorker, booksRepository, "Uses")

Rel(booksQueries, booksService,"Uses")
Rel(booksCommands, booksService, "Uses")
Rel(booksCopiesCommands, booksService, "Uses")

Rel(booksRepository, books_read_db,"Uses")
Rel(booksRepository, books_db,"Uses")

Rel(booksService, booksRepository,"Uses")

Rel(booksWorker, rabbit, "Uses")
Rel(booksService, rabbit, "Uses")
@enduml